-- Build SQLite3
--   static or shared library
--   AES 128 bit or AES 256 bit encryption support
--   Debug or Release
--   Linux32 or Linux64

-- Target directory for the build files generated by premake5
newoption {
  trigger     = "builddir",
  value       = "build",
  description = "Directory for the generated build files"
}

BUILDDIR = _OPTIONS["builddir"] or "build"

workspace "SQLite3"
  configurations { "Debug", "Release" }
  platforms { "Linux32", "Linux64" }
  location(BUILDDIR)

  filter { "platforms:Linux32" }
    system "Linux"
    architecture "x86"
    targetsuffix "_x86"


  filter { "platforms:Linux64" }
    system "Linux"
    architecture "x86_64"
    targetsuffix "_x86_64"

  filter { "configurations:Debug*" }
    defines {
      "DEBUG"
    }
    symbols "On"

  filter { "configurations:Release*" }
    defines {
      "NDEBUG"
    }
    optimize "On"

  filter {}

-- SQLite3 static library
project "sqlite3lib"
  language "C++"
  kind "StaticLib"

  makesettings { "include config.gcc" }

  files { "src/sqlite3secure.c", "src/*.h" }
  vpaths {
    ["Header Files"] = { "**.h" },
    ["Source Files"] = { "**/sqlite3secure.c", "**.def" }
  }
  characterset ("Unicode")
  flags { "StaticRuntime" }

  location( BUILDDIR )
  targetname "sqlite3"


  defines {
    "THREADSAFE=1",
    "SQLITE_MAX_ATTACHED=10",
    "SQLITE_ENABLE_EXPLAIN_COMMENTS",
    "SQLITE_SOUNDEX",
    "SQLITE_ENABLE_COLUMN_METADATA",
    "SQLITE_HAS_CODEC=1",
    "SQLITE_SECURE_DELETE",
    "SQLITE_ENABLE_FTS3",
    "SQLITE_ENABLE_FTS3_PARENTHESIS",
    "SQLITE_ENABLE_FTS4",
    "SQLITE_ENABLE_FTS5",
    "SQLITE_ENABLE_JSON1",
    "SQLITE_ENABLE_RTREE",
    "SQLITE_CORE",
    "SQLITE_ENABLE_EXTFUNC",
    "SQLITE_ENABLE_CSV",
  --    "SQLITE_ENABLE_SHA3",
    "SQLITE_ENABLE_CARRAY",
  --    "SQLITE_ENABLE_FILEIO",
    "SQLITE_ENABLE_SERIES",
    "SQLITE_USE_URI",
    "SQLITE_USER_AUTHENTICATION"
  }


  -- Target directory
  filter { "configurations:Debug" }
    targetdir "lib/debug"
  filter { "configurations:Release" }
    targetdir "lib/release"

-- SQLite3 shared library
project "sqlite3so"
  language "C++"
  kind "SharedLib"
  makesettings { "include config.gcc" }

  files { "src/sqlite3secure.c", "src/*.h", "src/sqlite3.def"}
  filter {}
  vpaths {
    ["Header Files"] = { "**.h" },
    ["Source Files"] = { "**/sqlite3secure.c", "**.def" }
  }
  characterset ("Unicode")
  flags { "StaticRuntime" }

  location( BUILDDIR )
  targetname "sqlite3"


  defines {
    "THREADSAFE=1",
    "SQLITE_MAX_ATTACHED=10",
    "SQLITE_SOUNDEX",
    "SQLITE_ENABLE_COLUMN_METADATA",
    "SQLITE_HAS_CODEC=1",
    "SQLITE_SECURE_DELETE",
    "SQLITE_ENABLE_FTS3",
    "SQLITE_ENABLE_FTS3_PARENTHESIS",
    "SQLITE_ENABLE_FTS4",
    "SQLITE_ENABLE_FTS5",
    "SQLITE_ENABLE_JSON1",
    "SQLITE_ENABLE_RTREE",
    "SQLITE_CORE",
    "SQLITE_ENABLE_EXTFUNC",
    "SQLITE_ENABLE_CSV",
    "SQLITE_ENABLE_SHA3",
    "SQLITE_ENABLE_CARRAY",
    "SQLITE_ENABLE_FILEIO",
    "SQLITE_ENABLE_SERIES",
    "SQLITE_USE_URI",
    "SQLITE_USER_AUTHENTICATION"
  }


  -- Target directory
  filter { "configurations:Debug" }
    targetdir "so/debug"
  filter { "configurations:Release" }
    targetdir "so/release"

-- SQLite3 Shell
project "sqlite3shell"
  kind "ConsoleApp"
  language "C++"

  makesettings { "include config.gcc" }


  vpaths {
    ["Header Files"] = { "**.h" },
    ["Source Files"] = { "**.c" }
  }
  files { "src/sqlite3.h", "src/shell.c" }
  characterset ("Unicode")
  flags { "StaticRuntime" }
  links { "sqlite3lib" }
  linkoptions "-pthread -ldl -lm"

  location( BUILDDIR )

  defines {
    "SQLITE_SHELL_IS_UTF8",
    "SQLITE_HAS_CODEC=1",
    "SQLITE_USER_AUTHENTICATION"
  }

  -- Target directory
  filter { "configurations:Debug" }
    targetdir "shell/debug"
  filter { "configurations:Release" }
    targetdir "shell/release"
